def lines(day):
    opt_filename = '{"_test" if test else ""}'
    return [
        'import sys',
        '',
        'def get_filename(test=False):',
        f'    return f\'day{day}_input{opt_filename}.txt\'',
        '',
        'def get_input(parse, test=False):',
        '    data = []',
        '    filename = get_filename(test)',
        '    with open(filename, \'r\') as file:',
        '        for line in file:',
        '            data.append(parse(line.strip()))',
        '    return data',
        '',
        '################################################################################',
        '############################### Start of Part 1 ################################',
        '################################################################################',
        'def parse1(line):',
        '    return line',
        '',
        '################################################################################',
        '########################## Helper Functions of Part 1 ##########################',
        '################################################################################',
        '',
        '',
        '',
        '',
        '################################################################################',
        f'def day{day}p1():',
        '    data = get_input(parse1, test=True)',
        '    for d in data:',
        '        print(d)',
        '',
        '################################################################################',
        '############################### Start of Part 2 ################################',
        '################################################################################',
        'def parse2(line):',
        '    return parse1(line)',
        '',
        '################################################################################',
        '########################## Helper Functions of Part 2 ##########################',
        '################################################################################',
        '',
        '',
        '',
        '',
        '################################################################################',
        f'def day{day}p2():',
        '    data = get_input(parse2, test=True)',
        '    for d in data:',
        '        pass',
        '',
        'def main():',
        '    divs = 40',
        '    msg = 15',
        '    n = (divs-msg)//2',
        '    divs += 1',
        '',
        '    run_one = any(arg == "1" for arg in sys.argv)',
        '    run_two = any(arg == "2" for arg in sys.argv)',
        '',
        '    if run_one is False and run_two is False:',
        '        run_one = run_two = True',
        '',
        '    if run_one:',
        '        print()',
        f'        print(\'-\'*(n), "Day {day} - Part 1", \'-\'*n)',
        f'        print(\'Result =>\', day{day}p1())',
        '        print()',
        '    if run_two:',
        f'        print(\'-\'*(n), "Day {day} - Part 2", \'-\'*n)',
        f'        print(\'Result =>\', day{day}p2())',
        '    print()',
        '',
        'main()',
    ]
